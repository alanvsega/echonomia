swagger: "2.0"
info:
  description: "API do app echonomia"
  version: "1.0.0"
  title: "echonomia"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
schemes:
- "http"
- "https"
tags:
- name: "User"
- name: "Bill"
- name: "Question"
- name: "Answer"
- name: "Tip"
securityDefinitions:
  APIKey:
    type: "apiKey"
    in: "header"
    name: "Authorization"
    description: "Token: Bearer $token"
paths:
  /login:
    post:
      tags:
      - "User"
      summary: "Autentica um usuário, dado seu e-mail e senha"
      parameters:
      - in: "body"
        name: "body"
        description: "Objeto com e-mail e senha do usuário"
        required: true
        schema:
          type: "object"
          properties:
            email:
              type: "string"
            password:
              type: "string"
          example:
            email: "jansley@vscode.com"
            password: "greg.pontepretano"
      responses:
        200:
          description: "Ok"
        401:
          description: "E-mail ou senha incorretos"
        500:
          description: "Erro interno no servidor"
  /user:
    post:
      tags:
      - "User"
      summary: "Cadastra um novo usuário"
      parameters:
      - in: "body"
        name: "body"
        description: "Objeto com as informações do usuário"
        required: true
        schema:
          $ref: "#/definitions/User"
      responses:
        200:
          description: "Ok"
        409:
          description: "E-mail já cadastrado"
        500:
          description: "Erro interno no servidor"
    get:
      tags:
      - "User"
      summary: "Retorna o usuário correspondente ao token"
      security:
      - APIKey: []
      responses:
        200:
          description: "Ok"
        401:
          description: "Não autorizado"
        404:
          description: "Usuário não encontrado"
        500:
          description: "Erro interno no servidor"
    patch:
      tags:
      - "User"
      summary: "Atualiza o usuário correspondente ao token"
      security:
      - APIKey: []
      parameters:
      - in: "body"
        name: "body"
        description: "Objeto com as informações atualizadas do usuário"
        required: true
        schema:
          $ref: "#/definitions/User"
      responses:
        200:
          description: "Ok"
        401:
          description: "Não autorizado"
        404:
          description: "Usuário não encontrado"
        500:
          description: "Erro interno no servidor"
    delete:
      tags:
      - "User"
      summary: "Remove o usuário correspondente ao token"
      security:
      - APIKey: []
      responses:
        200:
          description: "Ok"
        401:
          description: "Não autorizado"
        404:
          description: "Usuário não encontrado"
        500:
          description: "Erro interno no servidor"
  /users:
    get:
      tags:
      - "User"
      summary: "Retorna todos os usuários"
      security:
      - APIKey: []
      responses:
        200:
          description: "Ok"
        401:
          description: "Não autorizado"
        500:
          description: "Erro interno no servidor"
  /bills:
    get:
      tags:
      - "Bill"
      summary: "Retorna todas as contas do usuários"
      security:
      - APIKey: []
      parameters:
      - in: "query"
        name: "limit"
        type: "number"
        required: false
        description: "Limita o numero de itens retornados"
      - in: "query"
        name: "skip"
        type: "number"
        required: false
        description: "Despreza os n primeiros itens encontrados"
      responses:
        200:
          description: "Ok"
        401:
          description: "Não autorizado"
        500:
          description: "Erro interno no servidor"
  /bills/ConsumeChart:
    get:
      tags:
      - "Bill"
      summary: "Retorna as ultimas contas adicionadas"
      security:
      - APIKey: []
      parameters:
      - in: "query"
        name: "chartResolution"
        description: "Número total de contas a serem retornadas"
        schema:
            type: integer
        required: false
      responses:
        200:
          description: "Ok"
        401:
          description: "Não autorizado"
        500:
          description: "Erro interno no servidor"
  /bills/MonthEconomy:
    get:
      tags:
      - "Bill"
      summary: "Retorna o total de economia monetaria em relação ao mês anterior"
      security:
      - APIKey: []
      parameters:
      - in: "query"
        name: "referenceMonth"
        description: "Ano da conta de referencia"
        schema:
            type: integer
        required: false
      - in: "query"
        name: "referenceYear"
        description: "Mês da conta de referencia"
        schema:
            type: integer
        required: false
      responses:
        200:
          description: "Ok"
        401:
          description: "Não autorizado"
        500:
          description: "Erro interno no servidor"
  /bill:
    post:
      tags:
      - "Bill"
      summary: "Criar uma nova conta para o usuário atual"
      security:
      - APIKey: []
      parameters:
      - in: "body"
        name: "body"
        description: "Objeto conta"
        required: true
        schema:
          $ref: "#/definitions/Bill"
      responses:
        201:
          description: "Created"
        401:
          description: "Não autorizado"
        500:
          description: "Erro interno no servidor"
  /bill/{id}:
    patch:
      tags:
      - "Bill"
      summary: "Atualizar uma conta pelo id"
      security:
      - APIKey: []
      parameters:
      - name: "id"
        in: "path"
        description: "Id da conta a ser atualizada"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "Objeto conta"
        required: true
        schema:
          $ref: "#/definitions/Bill"
      responses:
        200:
          description: "Ok"
        401:
          description: "Não autorizado"
        500:
          description: "Erro interno no servidor"
    get:
      tags:
      - "Bill"
      summary: "Obter uma conta pelo id"
      security:
      - APIKey: []
      parameters:
      - name: "id"
        in: "path"
        description: "Id da conta a ser atualizada"
        required: true
        type: "string"
      responses:
        200:
          description: "Ok"
        404:
          description: "Not found"
        401:
          description: "Não autorizado"
        500:
          description: "Erro interno no servidor"
    delete:
      tags:
      - "Bill"
      summary: "Deleta uma conta pelo id"
      security:
      - APIKey: []
      parameters:
      - name: "id"
        in: "path"
        description: "Id da conta a ser atualizada"
        required: true
        type: "string"
      responses:
        200:
          description: "Ok"
        404:
          description: "Not found"
        401:
          description: "Não autorizado"
        500:
          description: "Erro interno no servidor"
  /questions:
    get:
      tags:
      - "Question"
      summary: "Retorna todas as questões"
      security:
      - APIKey: []
      responses:
        200:
          description: "Ok"
        401:
          description: "Não autorizado"
        500:
          description: "Erro interno no servidor"
  /question:
    post:
      tags:
      - "Question"
      summary: "Cadastra uma nova questão"
      security:
      - APIKey: []
      parameters:
      - in: "body"
        name: "body"
        description: "Objeto com as informações da questão"
        required: true
        schema:
          $ref: "#/definitions/Question"
      responses:
        201:
          description: "Created"
        401:
          description: "Não autorizado"
        500:
          description: "Erro interno no servidor"
  /question/{id}:
    delete:
      tags:
      - "Question"
      summary: "Remove a questão correspondente ao Id"
      security:
      - APIKey: []
      parameters:
      - name: "id"
        in: "path"
        description: "Id da questão a ser removida"
        required: true
        type: "string"
      responses:
        200:
          description: "Ok"
        401:
          description: "Não autorizado"
        404:
          description: "Questão não encontrada"
        500:
          description: "Erro interno no servidor"
  /answers:
    get:
      tags:
      - "Answer"
      summary: "Retorna todas as respostas do usuário correspondente ao token"
      security:
      - APIKey: []
      responses:
        200:
          description: "Ok"
        401:
          description: "Não autorizado"
        500:
          description: "Erro interno no servidor"
    post:
      tags:
      - "Answer"
      summary: "Cadastra todas as respostas referenciando o usuário correspondente ao token"
      security:
      - APIKey: []
      parameters:
      - in: "body"
        name: "body"
        description: "Array com todas as questões a ser cadastradas"
        required: true
        schema:
          type: "array"
          items:
            $ref: "#/definitions/Answer"
      responses:
        200:
          description: "Ok"
        400:
          description: "Formato inválido"
        401:
          description: "Não autorizado"
        500:
          description: "Erro interno no servidor"
  /tips:
    get:
      tags:
      - "Tip"
      summary: "Retorna todas as dicas"
      security:
      - APIKey: []
      responses:
        200:
          description: "Ok"
        401:
          description: "Não autorizado"
        500:
          description: "Erro interno no servidor"
  /tip:
    get:
      tags:
      - "Tip"
      summary: "Retorna aleatoriamente uma dica"
      security:
      - APIKey: []
      responses:
        200:
          description: "Ok"
        401:
          description: "Não autorizado"
        404:
          description: "Nenhuma dica encontrada"
        500:
          description: "Erro interno no servidor"
    post:
      tags:
      - "Tip"
      summary: "Cadastra uma nova dica"
      security:
      - APIKey: []
      parameters:
      - in: "body"
        name: "body"
        description: "Objeto com as informações da dica"
        required: true
        schema:
          $ref: "#/definitions/Tip"
      responses:
        200:
          description: "Ok"
        401:
          description: "Não autorizado"
        500:
          description: "Erro interno no servidor"
  /tip/{id}:
    delete:
      tags:
      - "Tip"
      summary: "Remove a dica correspondente ao Id"
      security:
      - APIKey: []
      parameters:
      - name: "id"
        in: "path"
        description: "Id da dica a ser removida"
        required: true
        type: "string"
      responses:
        200:
          description: "Ok"
        401:
          description: "Não autorizado"
        404:
          description: "Dica não encontrada"
        500:
          description: "Erro interno no servidor"
definitions:
  User:
    User: "object"
    properties:
      name:
        type: "string"
      email:
        type: "string"
      password:
        type: "string"
      birthDate:
        type: "string"
    example:
      name: "user"
      email: "user@eaxample.com"
      password: "user123password"
      birthDate: "01-01-1999"
  Bill:
    Bill: "Object"
    properties:
      month:
        type: "number"
      year:
        type: "number"
      expenditure:
        type: "number"
      flag:
        type: "number"
      totalValue:
        type: "number"
      totalTaxes:
        type: "number"
      additionalGreen:
        type: "number"
      additionalYellow:
        type: "number"
      additionalRed:
        type: "number"
      startReadDate:
        type: "Date"
      endReadDate:
        type: "Date"
    example:
      month: 1
      year: 2019
      expenditure: "01-01-1999"
      flag: "green"
      totalValue: 99.99
      totalTaxes: 99.99
      additionalGreen: 99.99
      additionalYellow: 99.99
      additionalRed: 99.99
      startReadDate: "01-01-1999"
      endReadDate: "01-01-1999"
  Question:
    Question: "object"
    properties:
      title:
        type: "string"
      alternatives:
        type: "array"
        items:
          type: "string"
    example:
      title: "Quantas pessoas moram na residência?"
      alternatives: ["1", "2", "3", "mais do que 3"]
  Answer:
    Answer: "object"
    properties:
      question:
        type: "string"
      answer:
        type: "string"
    example:
      question: "Quantas pessoas moram na residência?"
      answer: "2"
  Tip:
    Tip: "object"
    properties:
      title:
        type: "string"
      description:
        type: "string"
    example:
      title: "Invista nas lâmpadas certas"
      description: "Troque as lâmpadas eletrônicas pelas de LED."
